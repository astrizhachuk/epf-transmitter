@startuml

title 'Обработка внешнего запроса Gitlab HTTP-сервисом'

participant Гитлаб
participant ОбработкаДанных
participant ВнешниеЗапросы
participant ВнешнийЗапрос
participant ВнешнийЗапрос.Копия
participant ФайлыВнешнегоХранилища
participant Маршрутизация
participant Получатели
participant ОбработкаДанных.ФоновоеЗадание

[o-> Гитлаб ++ : Запрос

Гитлаб -> Гитлаб ++ : ПроверитьЗапрос

opt ПроверкаПровалена
return
<- Гитлаб -- : Ответ {КодСостояния != 200}
end

Гитлаб -> ВнешниеЗапросы ++
activate Гитлаб

create ВнешнийЗапрос
ВнешниеЗапросы -> ВнешнийЗапрос ++ : Создать
return
return ВнешнийЗапрос : Объект

Гитлаб -> ОбработкаДанных ++ : ОбработатьЗапрос(Обработчик, ВнешнийЗапрос: Объект)
\\-- Гитлаб -- : {КодСостояния = 200}
ОбработкаДанных -> ВнешнийЗапрос ++ : ПолучитьСериализованныеДанные

ВнешнийЗапрос -> ВнешнийЗапрос : Сериализовать
return ВнешнийЗапрос : Структура

create ОбработкаДанных.ФоновоеЗадание
ОбработкаДанных -> ОбработкаДанных.ФоновоеЗадание --++ : ЗагрузитьИОтправитьФайлы(Обработчик, Идентификатор, ВнешнийЗапрос: Структура)

ОбработкаДанных.ФоновоеЗадание -> ВнешниеЗапросы ++ : СоздатьИзСериализованныхДанных

' TODO вариант через создание копии экземпляра?
' create ВнешнийЗапрос.Копия
' ВнешниеЗапросы -> ВнешнийЗапрос.Копия ++ : Создать
' return ВнешнийЗапрос : Объект
' return

' group ПолучениеФайловИзВнешнегоХранилища
' ОбработкаДанных.ФоновоеЗадание -> ВнешниеЗапросы ++ : ПолучитьПараметрыХранилища
' ВнешниеЗапросы -> ВнешнийЗапрос.Копия ++
' return
' return
' ОбработкаДанных.ФоновоеЗадание -> ВнешниеЗапросы ++ : ОпределитьФайлыКЗагрузке
' ВнешниеЗапросы -> ВнешнийЗапрос.Копия ++
' return
' return
' ОбработкаДанных.ФоновоеЗадание -> ФайлыВнешнегоХранилища ++ : ПолучитьИзХранилищаФайлыКЗагрузке
' return
' ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ЗаполнитьСхемыМаршрутов
' end

create ВнешнийЗапрос
ВнешниеЗапросы -> ВнешнийЗапрос ++ : Создать
return ВнешнийЗапрос : Объект
return

group ПолучениеФайловИзВнешнегоХранилища
ОбработкаДанных.ФоновоеЗадание -> ВнешниеЗапросы ++ : ПолучитьПараметрыХранилища
ВнешниеЗапросы -> ВнешнийЗапрос ++
return
return
ОбработкаДанных.ФоновоеЗадание -> ВнешниеЗапросы ++ : ОпределитьФайлыКЗагрузке
ВнешниеЗапросы -> ВнешнийЗапрос ++
return
return
ОбработкаДанных.ФоновоеЗадание -> ФайлыВнешнегоХранилища ++ : ПолучитьИзХранилища
return
ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ЛогироватьРезультатЗагрузки
ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ПолучитьФайлыБезОшибок
ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ЗаполнитьСхемыМаршрутов
end

ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ПроверитьФайлы

group СохранениеДанныхВИнформационнуюБазу
ОбработкаДанных.ФоновоеЗадание -> ВнешниеЗапросы ++ : Сохранить
return
ОбработкаДанных.ФоновоеЗадание -> ФайлыВнешнегоХранилища ++ : Сохранить
return
end

' TODO обращение напрямую в объект, а другие методы через api внешних запросов, переделать!
' ОбработкаДанных.ФоновоеЗадание -> ВнешнийЗапрос.Копия ++ : ПолучитьПредставленияСхемМаршрутовКИсполнению
ОбработкаДанных.ФоновоеЗадание -> ВнешнийЗапрос ++ : ПолучитьПредставленияСхемМаршрутовКИсполнению
return
ОбработкаДанных.ФоновоеЗадание -> Маршрутизация ++ : РаспределитьФайлыПоМаршрутам
return
ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ЛогироватьРаспределениеФайловПоМаршрутам
ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : УдалитьФайлыБезМаршрутов
ОбработкаДанных.ФоновоеЗадание -> Получатели ++ : ОтправитьФайлыВФоне
return
ОбработкаДанных.ФоновоеЗадание -> ОбработкаДанных.ФоновоеЗадание : ЛогироватьЗапускЗаданийНаОтправкуФайлов


@enduml
