#language: ru

@UseMockserver
@Timer

Функционал: Фоновые задания обработки запроса

Как Пользователь
Я хочу иметь возможность просматривать информацию по фоновым заданиям обработчиков событий
Чтобы анализировать процессы обработки данных и управлять фоновыми заданиями

Контекст:

	Дано Я подключаю TestClient "Этот клиент" логин "Пользователь" пароль ""
	И я закрыл все окна клиентского приложения	
	
	* Инициализируем данные

		И Я очищаю MockServer
		И Я создаю Ожидание из файла "/test/expectations/routes.json"
		И Я создаю Ожидание из файла "/test/expectations/raw-epf.json"
		И я удаляю все элементы Справочника "ОбработчикиВнешнихЗапросов"
		И я удаляю все записи РегистрСведений "ВнешниеЗапросы"
		И я удаляю все записи РегистрСведений "ВнешниеФайлы"
		И я проверяю или создаю для справочника "ОбработчикиВнешнихЗапросов" объекты:
			| 'Ссылка'                                                                             | 'ПометкаУдаления' | 'Код'       | 'Наименование'           | 'АдресПроекта'                               | 'Токен'  |
			| 'e1cib/data/Catalog.ОбработчикиВнешнихЗапросов?ref=9d980242ac16000611ec736a4126063a' | 'False'           | '000000001' | 'Тест обработки запроса' | 'http://mockserver:1080/root/external-epf' | 'Token1' |
		И Я программно заполняю настройки сервиса работы с GitLab тестовыми значениями

	Дано В командном интерфейсе я выбираю 'Интеграция с GitLab' 'Обработчики внешних запросов'
	Тогда открылось окно 'Обработчики внешних запросов'

	* Выполняем запрос

		Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
		И Пауза 1

	* Выбираем обработчик запросов

		Пусть Я отрываю на редактирование обработчик "000000001"

Сценарий: Просмотр фоновых заданий по идентификатору запроса

	* Делаем запрос от GitLab с новым идентификатором запроса

		Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req2.json" для сервиса "/api/ru/hs/gitlab/events/push"

	* Запоминаем текущее состояние списка фоновых заданий

		Когда Я для строки "1b9949a2" нажимаю на кнопку с именем "OpenBackgrounds"
		Тогда открылось окно 'Фоновые задания'
		И я запоминаю количество строк таблицы "Backgrounds" как "BackgroundJobsCount"

	* Проверяем что отображаются фоновые задания только по текущему идентификатору запроса

		Пусть я запоминаю количество строк таблицы "Backgrounds" как "BackgroundJobsCount"
		Когда в таблице "Backgrounds" я активизирую поле "Ключ"
		И я выбираю пункт контекстного меню "Расширенный поиск" на элементе формы с именем "Backgrounds"
		Тогда открылось окно 'Найти'
		И я меняю значение переключателя 'Как искать' на 'По началу строки'
		И в поле '&Что искать' я ввожу текст '1b9949a2'
		И я нажимаю на кнопку '&Найти'
		Тогда открылось окно 'Фоновые задания'
		И я жду, что в таблице "Backgrounds" количество строк будет "равно" "$BackgroundJobsCount$" в течение 5 секунд

Сценарий: Обновление состояний фоновых заданий

	Дано Я создаю Ожидание из файла "/test/expectations/endpoints.json"

	Запоминаем первую строку списка фоновых заданий

		Когда Я для строки "1b9949a2" нажимаю на кнопку с именем "OpenBackgrounds"
		Тогда открылось окно 'Фоновые задания'

		Пусть в таблице "Backgrounds" я перехожу к первой строке
		И я запоминаю выделенные строки таблицы "Backgrounds" как "BackgroundJobsBefore"
			| 'Начало'                   |
			| 'Уникальный идентификатор' |

	Выполняем запрос от сервера GitLab

		Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
		И Пауза 1

	Обновляем весь список фоновых и проверяем появление трех новых заданий

		Когда я нажимаю на кнопку с именем 'RefreshAll'
		И в таблице "Backgrounds" я перехожу к первой строке
		И в таблице "Backgrounds" я перехожу к следующей строке
		И в таблице "Backgrounds" я перехожу к следующей строке
		И в таблице "Backgrounds" я перехожу к следующей строке
		И я запоминаю выделенные строки таблицы "Backgrounds" как "BackgroundJobsCurrent"
			| 'Начало'                   |
			| 'Уникальный идентификатор' |
		И таблица "BackgroundJobsBefore" содержится в таблице "BackgroundJobsCurrent"
		
		И Пауза 5

	Выполняем запросы от сервера GitLab еще раз

		И Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
		И Пауза 1

	# На получении файла с mockserver стоит задержка 3 секунды
	Проверяем появление новых работающих фоновых заданий

		Когда я нажимаю на кнопку с именем 'RefreshAll'
		Тогда таблица "Backgrounds" содержит строки:
			| 'Конец'   | 'Имя метода'          | 'Ключ'                                                                                                | 'Состояние'             |
			| ''        | 'Получатели.ОтправитьФайл'  | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f\|http://mockserver:1080/endpoint3\|Внешняя Обработка 1.epf' | 'Задание выполняется'   |
			| ''        | 'Получатели.ОтправитьФайл'  | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f\|http://mockserver:1080/endpoint1\|Внешняя Обработка 1.epf' | 'Задание выполняется'   |
	
	Обновляем состояние задания после ожидания

		Когда Пауза 5
		И в таблице "Backgrounds" я перехожу к строке
			| 'Конец'   | 'Имя метода'          | 'Ключ'                                                                                                | 'Состояние'             |
			| ''        | 'Получатели.ОтправитьФайл'  | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f\|http://mockserver:1080/endpoint1\|Внешняя Обработка 1.epf' | 'Задание выполняется'   |
		И я нажимаю на кнопку с именем 'RefreshCurrent'
		И в таблице "Backgrounds" поле "Состояние" имеет значение "Задание выполнено"

		И в таблице "Backgrounds" я перехожу к строке
			| 'Конец'   | 'Имя метода'          | 'Ключ'                                                                                                | 'Состояние'             |
			| ''        | 'Получатели.ОтправитьФайл'  | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f\|http://mockserver:1080/endpoint3\|Внешняя Обработка 1.epf' | 'Задание выполняется'   |
		И я нажимаю на кнопку с именем 'RefreshCurrent'
		И в таблице "Backgrounds" поле "Состояние" имеет значение "Задание выполнено"

Сценарий: Принудительное завершение фонового задания

	Дано Я создаю Ожидание из файла "/test/expectations/endpoints.json"
	#И я перезаполняю константу "ТаймаутВнешнегоСервиса" значением "0"

	Открываем список фоновых заданий

		Когда Я для строки "1b9949a2" нажимаю на кнопку с именем "OpenBackgrounds"
		Тогда открылось окно 'Фоновые задания'

	Выполняем запрос от сервера GitLab

		Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
		И Пауза 1
		И я нажимаю на кнопку с именем 'RefreshAll'

	Принудительно завершаем задание

		И в таблице "Backgrounds" я перехожу к строке
			| 'Конец'   | 'Имя метода'          | 'Ключ'                                                                                                | 'Состояние'             |
			| ''        | 'Получатели.ОтправитьФайл'  | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f\|http://mockserver:1080/endpoint3\|Внешняя Обработка 1.epf' | 'Задание выполняется'   |
		И я нажимаю на кнопку с именем 'KillCurrent'
		И в таблице "Backgrounds" поле "Состояние" имеет значение "Задание отменено пользователем"
