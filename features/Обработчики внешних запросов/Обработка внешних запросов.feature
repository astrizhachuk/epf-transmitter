#language: ru

@UseMockserver
@Timer

Функционал: Перехват и обработка запроса с сервера GitLab

Как Пользователь
Я хочу иметь возможность получить и обработать запрос с сервера GitLab
Чтобы проанализировать его и повторно вручную обработать в случае необходимости

Контекст:

	Дано Я подключаю TestClient "Этот клиент" логин "Пользователь" пароль ""
	И я закрыл все окна клиентского приложения

	* Инициализируем данные

		И Я очищаю MockServer
		И Я создаю Ожидание из файла "/test/expectations/raw-epf.json"
		И Я создаю Ожидание из файла "/test/expectations/routes.json"
		И Я создаю Ожидание из файла "/test/expectations/endpoints.json"
		И я удаляю все элементы Справочника "ОбработчикиВнешнихЗапросов"
		И я удаляю все записи РегистрСведений "ВнешниеЗапросы"
		И я удаляю все записи РегистрСведений "ВнешниеФайлы"
		И я проверяю или создаю для справочника "ОбработчикиВнешнихЗапросов" объекты:
			| 'Ссылка'                                                                             | 'ПометкаУдаления' | 'Код'       | 'Наименование'           | 'АдресПроекта'                               | 'Токен'  |
			| 'e1cib/data/Catalog.ОбработчикиВнешнихЗапросов?ref=9d980242ac16000611ec736a4126063a' | 'False'           | '000000001' | 'Тест обработки запроса' | 'http://mockserver:1080/root/external-epf' | 'Token1' |
		И Я программно заполняю настройки сервиса работы с GitLab тестовыми значениями

Сценарий: Полная проверка обработки событий для одного обработчика

	Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
	И Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req2.json" для сервиса "/api/ru/hs/gitlab/events/push"
	И Пауза 2

	Дано В командном интерфейсе я выбираю 'Интеграция с GitLab' 'Обработчики внешних запросов'
	Тогда открылось окно 'Обработчики внешних запросов'
	И в таблице 'Список' количество строк "равно" 1

	* Проверяем, что полученные запросы отобразились в форме

		Когда Я отрываю на редактирование обработчик "000000001"
		Тогда таблица 'ПолученныеЗапросы' стала равной:
			| 'Дата'               | 'Идентификатор (краткий)' | 'Сообщение'                                                       |
			| '21.07.2020 9:23:30' | '1b9949a2'                | 'Merge branch \'feature/update-epf\' into \'master\''             |
			| '21.07.2020 9:22:30' | '2b9949a2'                | 'По идее, всегда null при push, но заполним значением для тестов' |

	* Проверяем, что в базе данных созданы только ожидаемые записи о внешних запросах и файлах

		И В командном интерфейсе я выбираю "Интеграция с GitLab" "Внешние запросы"
		И в таблице 'Список' количество строк "равно" 2
		И я закрываю текущее окно

		И В командном интерфейсе я выбираю "Интеграция с GitLab" "Внешние файлы"
		И в таблице 'Список' количество строк "равно" 2
		И я закрываю текущее окно

	* Проверяем факт отправки файлов получателям на MockServer

		И Пауза 2
		Тогда Я выполняю проверку запроса '{""httpRequest"": {""path"": ""/endpoint1""}, ""times"": { ""atLeast"": 2, ""atMost"": 2 }}'
		И Я выполняю проверку запроса '{""httpRequest"": {""path"": ""/endpoint3""}, ""times"": { ""atLeast"": 2, ""atMost"": 2 }}'

Сценарий: Корректное распределение событий между двумя обработчиками

	* Регистрируем второй обработчик внешних запросов

		И я проверяю или создаю для справочника "ОбработчикиВнешнихЗапросов" объекты:
			| 'Ссылка'                                                                             | 'ПометкаУдаления' | 'Код'       | 'Наименование'             | 'АдресПроекта'                                | 'Токен'  |
			| 'e1cib/data/Catalog.ОбработчикиВнешнихЗапросов?ref=5d980242ac16000611ec736a4126063a' | 'False'           | '000000002' | 'Тест обработки запроса 2' | 'http://mockserver:1080/root/external-epf2' | 'Token2' |

	Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
	И Я отправляю "Push Hook" запрос с токеном "Token2" и телом из файла "/test/requests/push-repo2-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
	И Пауза 2

	Дано В командном интерфейсе я выбираю 'Интеграция с GitLab' 'Обработчики внешних запросов'
	Тогда открылось окно 'Обработчики внешних запросов'
	И в таблице 'Список' количество строк "равно" 2

	* Проверяем, что запросы корректно распределились по обработчикам

		Когда Я отрываю на редактирование обработчик "000000001"
		Тогда таблица 'ПолученныеЗапросы' стала равной:
			| 'Дата'               | 'Идентификатор (краткий)' | 'Сообщение'                                                       |
			| '21.07.2020 9:23:30' | '1b9949a2'                | 'Merge branch \'feature/update-epf\' into \'master\''             |
		И я закрываю текущее окно

		Когда Я отрываю на редактирование обработчик "000000002"
		Тогда таблица 'ПолученныеЗапросы' стала равной:
			| 'Дата'               | 'Идентификатор (краткий)' | 'Сообщение'                                                       |
			| '21.07.2020 9:23:30' | 'ab9949a2'                | 'Заголовок коммита ab9949a2 для первого запроса из второго репозитория' |
		И я закрываю текущее окно

Сценарий: Повторная обработка запроса с пользовательскими настройками маршрутизации

	Пусть Я отправляю "Push Hook" запрос с токеном "Token1" и телом из файла "/test/requests/push-repo1-req1.json" для сервиса "/api/ru/hs/gitlab/events/push"
	И Пауза 2

	Дано В командном интерфейсе я выбираю 'Интеграция с GitLab' 'Обработчики внешних запросов'
	Тогда открылось окно 'Обработчики внешних запросов'

	* Изменяем маршрут отправки файлов получателям

		Когда Я отрываю на редактирование обработчик "000000001"
		И Я для строки "1b9949a2" нажимаю на кнопку с именем "ОткрытьРедакторМаршрутов"
		И Я активирую просмотр маршрутов для коммита "1b9949a2"

		Тогда я изменяю флаг 'Пользовательский вариант'
	
		# Исключаем "spb" в маршрутах для "Каталог с отчетами и обработками/Внешняя Обработка 1.epf"
		И в поле с именем 'Редактор' я ввожу текст
			"""bsl
			{
			  "ws": [
			    {
			      "name": "spb",
			      "url": "http://mockserver:1080/endpoint1",
			      "enabled": true
			    },
			    {
			      "name": "msk",
			      "url": "http://mockserver:1080/endpoint2",
			      "enabled": false
			    },
			    {
			      "name": "szfo",
			      "url": "http://mockserver:1080/endpoint3",
			      "enabled": true
			    }
			  ],
			  "epf": [
			    {
			      "name": "Каталог 1/test1.epf",
			      "exclude": [ "spb", "msk" ]
			    },
			    { "name": "Каталог 2/test2.epf" },
			    {
			      "name": "Каталог с отчетами и обработками/Внешняя Обработка 1.epf",
			      "exclude": [ "spb" ]
			    },
			    { "name": "Нет такого файла.epf" }
			  ]
			}
			"""
		И я нажимаю на кнопку 'Записать и закрыть'

		И Я для строки "1b9949a2" нажимаю на кнопку с именем "ОткрытьРедакторМаршрутов"
		И Я активирую просмотр маршрутов для коммита "968eca17"

		Тогда я изменяю флаг 'Пользовательский вариант'
	
		# Исключаем "spb" в маршрутах для "Каталог с отчетами и обработками/Внешняя Обработка 1.epf"
		И в поле с именем 'Редактор' я ввожу текст
			"""bsl
			{
			  "ws": [
			    {
			      "name": "spb",
			      "url": "http://mockserver:1080/endpoint1",
			      "enabled": true
			    },
			    {
			      "name": "msk",
			      "url": "http://mockserver:1080/endpoint2",
			      "enabled": false
			    },
			    {
			      "name": "szfo",
			      "url": "http://mockserver:1080/endpoint3",
			      "enabled": true
			    }
			  ],
			  "epf": [
			    {
			      "name": "Каталог 1/test1.epf",
			      "exclude": [ "spb", "msk" ]
			    },
			    { "name": "Каталог 2/test2.epf" },
			    {
			      "name": "Каталог с отчетами и обработками/Внешняя Обработка 1.epf",
			      "exclude": [ "spb" ]
			    },
			    { "name": "Нет такого файла.epf" }
			  ]
			}
			"""
		И я нажимаю на кнопку 'Записать и закрыть'

		И Я для строки "1b9949a2" нажимаю на кнопку с именем "ОткрытьРедакторМаршрутов"
		И Я активирую просмотр маршрутов для коммита "ef886bb4"

		Тогда я изменяю флаг 'Пользовательский вариант'
	
		# Исключаем "spb" в маршрутах для "Каталог с отчетами и обработками/Внешняя Обработка 1.epf"
		И в поле с именем 'Редактор' я ввожу текст
			"""bsl
			{
			  "ws": [
			    {
			      "name": "spb",
			      "url": "http://mockserver:1080/endpoint1",
			      "enabled": true
			    },
			    {
			      "name": "msk",
			      "url": "http://mockserver:1080/endpoint2",
			      "enabled": false
			    },
			    {
			      "name": "szfo",
			      "url": "http://mockserver:1080/endpoint3",
			      "enabled": true
			    }
			  ],
			  "epf": [
			    {
			      "name": "Каталог 1/test1.epf",
			      "exclude": [ "spb", "msk" ]
			    },
			    { "name": "Каталог 2/test2.epf" },
			    {
			      "name": "Каталог с отчетами и обработками/Внешняя Обработка 1.epf",
			      "exclude": [ "spb" ]
			    },
			    { "name": "Нет такого файла.epf" }
			  ]
			}
			"""
		И я нажимаю на кнопку 'Записать и закрыть'

	* Повторный запуск обработки данных с измененным маршрутом

		Пусть в таблице "ПолученныеЗапросы" я нажимаю на кнопку с именем 'HandleRequest'
		Тогда появилось предупреждение, содержащее текст "Задание на обработку запроса запущено."
		И я закрываю окно предупреждения

	* Проверяем факт отправки файлов получателям на MockServer по новому маршруту

		И Пауза 2
		Тогда Я выполняю проверку запроса '{""httpRequest"": {""path"": ""/endpoint1""}, ""times"": { ""atLeast"": 1, ""atMost"": 1 }}'
		И Я выполняю проверку запроса '{""httpRequest"": {""path"": ""/endpoint3""}, ""times"": { ""atLeast"": 2, ""atMost"": 2 }}'
