#language: ru

@ExportScenarios
@Mock
@ignoreoncimainbuild

Функционал: Работа с MockServer

Как Администратор
Я хочу иметь возможность управлять MockServer
Чтобы выполнить функциональное тестирование

Контекст:
	Дано Я подключаю TestClient "Этот клиент" логин "Администратор" пароль ""

Сценарий: Я очищаю MockServer
	Пусть я выполняю код встроенного языка на сервере
		| 'HTTPСоединение = Новый HTTPСоединение("mockserver", 1080);'       |
		| 'HTTPЗапрос = Новый HTTPЗапрос("/mockserver/reset");'               |
		| 'HTTPОтвет = HTTPСоединение.Записать(HTTPЗапрос);'                  |

Сценарий: Я создаю Expectation с телом запроса "ЗначениеФайлТелаЗапроса"
	Пусть Я запоминаю значение выражения "ЗначениеФайлТелаЗапроса" в переменную "ФайлТелаЗапроса"
	Тогда я выполняю код встроенного языка на сервере
		| 'HTTPСоединение = Новый HTTPСоединение("mockserver", 1080);'              |
		| 'Заголовки = Новый Соответствие;'                                          |
		| 'Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");'   |
		| 'HTTPЗапрос = Новый HTTPЗапрос("/mockserver/expectation", Заголовки);'     |
		| 'HTTPЗапрос.УстановитьИмяФайлаТела("$ФайлТелаЗапроса$");'                  |
		| 'HTTPОтвет = HTTPСоединение.Записать(HTTPЗапрос);'                         |

Сценарий: Я проверяю запрос для "ЗначениеТекстЗапроса"
	Пусть Я запоминаю значение выражения "ЗначениеТекстЗапроса" в переменную "ТекстЗапроса"
	Тогда я выполняю код встроенного языка на сервере
		| 'HTTPСоединение = Новый HTTPСоединение("mockserver", 1080);'              |
		| 'Заголовки = Новый Соответствие;'                                          |
		| 'Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");'   |
		| 'HTTPЗапрос = Новый HTTPЗапрос("/mockserver/verify", Заголовки);'          |
		| 'HTTPЗапрос.УстановитьТелоИзСтроки("$ТекстЗапроса$");'                     |
		| 'HTTPОтвет = HTTPСоединение.Записать(HTTPЗапрос);'                         |
		| 'Объект().ПроверитьИстину(HTTPОтвет.КодСостояния = 202);'                  |

