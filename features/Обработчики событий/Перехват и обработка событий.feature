#language: ru

@Mock

Функционал: Перехват и обработка запроса с сервера GitLab

Как Пользователь
Я хочу иметь возможность получить и обработать запрос с сервера GitLab
Чтобы проанализировать его и повторно обработать в случае необходимости

Контекст:
	Дано Я подключаю TestClient "Этот клиент" логин "Пользователь" пароль ""
	И Я очищаю MockServer
	И Я создаю Expectation с телом запроса "/home/usr1cv8/test/expectation-routing.json"
	И Я создаю Expectation с телом запроса "/home/usr1cv8/test/expectation-epf-push.json"
	И я удаляю все элементы Справочника "Webhooks"
	И я удаляю все записи РегистрСведений "QueryData"
	И я удаляю все записи РегистрСведений "RemoteFiles"
	И я закрыл все окна клиентского приложения
	И Я настраиваю сервис работы с GitLab для функционального тестирования
	И В командном интерфейсе я выбираю 'Интеграция с GitLab' 'Обработчики событий'
	Тогда открылось окно 'Обработчики событий'

Сценарий: Я проверяю что запрос с сервера GitLab перехвачен и обработан

	Пусть Я создаю Expectation с телом запроса "/home/usr1cv8/test/expectation-endpoints.json"
	И Я добавляю новый обработчик событий "Тест обработки запроса" с ключом "gita"
	И Я отправляю "Push Hook" запрос с ключом "gita" и телом "/home/usr1cv8/test/request-epf-push.json" для "/api/ru/hs/gitlab/webhooks/epf/push"

	Проверка получения файла получателями

		И Пауза 5
		Тогда Я проверяю запрос для '{""httpRequest"": {""path"": ""/endpoint1""}, ""times"": { ""atLeast"": 1, ""atMost"": 1 }}'
		И Я проверяю запрос для '{""httpRequest"": {""path"": ""/endpoint3""}, ""times"": { ""atLeast"": 1, ""atMost"": 1 }}'

Сценарий: Я проверяю что данные запроса и полученные внешние файлы сохранились в информационной базе

	Пусть Я добавляю новый обработчик событий "Тест обработки запроса фэйк" с ключом "фэйк"
	И Я добавляю новый обработчик событий "Тест обработки запроса" с ключом "gita"
	И Я добавляю новый обработчик событий "Тест обработки запроса фэйк 2" с ключом "gita2"

	И Я отправляю "Push Hook" запрос с ключом "фэйк" и телом "/home/usr1cv8/test/request-epf-push-3.json" для "/api/ru/hs/gitlab/webhooks/epf/push"
	И Я отправляю "Push Hook" запрос с ключом "gita" и телом "/home/usr1cv8/test/request-epf-push.json" для "/api/ru/hs/gitlab/webhooks/epf/push"
	И Я отправляю "Push Hook" запрос с ключом "gita" и телом "/home/usr1cv8/test/request-epf-push-2.json" для "/api/ru/hs/gitlab/webhooks/epf/push"
	
	Проверка записи данных на регистрах

		И Я подключаю TestClient "Этот клиент" логин "Администратор" пароль ""

		И Я открываю основную форму списка регистра сведений "QueryData"
		Тогда таблица "List" стала равной:
			| 'Обработчик события'          | 'checkout_sha'                             |
			| 'Тест обработки запроса фэйк' | '3b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
			| 'Тест обработки запроса'      | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
			| 'Тест обработки запроса'      | '2b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |

		И Я открываю основную форму списка регистра сведений "RemoteFiles"
		Тогда таблица "List" стала равной:
			| 'Обработчик события'          | 'checkout_sha'                             |
			| 'Тест обработки запроса фэйк' | '3b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
			| 'Тест обработки запроса'      | '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
			| 'Тест обработки запроса'      | '2b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
		
		И я закрываю TestClient "Этот клиент"

	Проверка данных на форме элемента обработчиков событий

		И Я подключаю TestClient "Этот клиент" логин "Пользователь" пароль ""
		И В командном интерфейсе я выбираю 'Интеграция с GitLab' 'Обработчики событий'
		Тогда открылось окно 'Обработчики событий'

		Тогда в таблице "List" я перехожу к строке:
			| 'Наименование'                | 'Код'       | 'Секретный ключ' |
			| 'Тест обработки запроса фэйк' | '000000001' | 'фэйк'           |
		И в таблице "List" я выбираю текущую строку
		Тогда таблица "ReceivedRequests" стала равной:
			| 'checkout_sha'                             |
			| '3b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
		И Я закрываю окно 'Тест обработки запроса фэйк (Обработчики событий)'

		Тогда в таблице "List" я перехожу к строке:
			| 'Наименование'            | 'Код'       | 'Секретный ключ' |
			| 'Тест обработки запроса'  | '000000002' | 'gita'           |
		И в таблице "List" я выбираю текущую строку
		Тогда таблица "ReceivedRequests" стала равной:
			| 'checkout_sha'                             |
			| '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
			| '2b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
		И Я закрываю окно 'Тест обработки запроса (Обработчики событий)'

		Тогда в таблице "List" я перехожу к строке:
			| 'Наименование'                  | 'Код'       | 'Секретный ключ' |
			| 'Тест обработки запроса фэйк 2' | '000000003' | 'gita2'          |
		И в таблице "List" я выбираю текущую строку
		Тогда в таблице "ReceivedRequests" количество строк "равно" 0
		И Я закрываю окно 'Тест обработки запроса фэйк 2 (Обработчики событий)'

		И я жду закрытия окна 'Тест обработки запроса фэйк 2 (Обработчики событий) *' в течение 2 секунд

Сценарий: Я проверяю что повторно отправленный запрос (вручную) был обработан

	Пусть Я создаю Expectation с телом запроса "/home/usr1cv8/test/expectation-endpoints.json"
	И Я добавляю новый обработчик событий "Тест обработки запроса" с ключом "gita"
	И Я отправляю "Push Hook" запрос с ключом "gita" и телом "/home/usr1cv8/test/request-epf-push.json" для "/api/ru/hs/gitlab/webhooks/epf/push"
	И Пауза 5

	Тогда в таблице "List" я перехожу к строке:
		| 'Наименование'            | 'Код'       | 'Секретный ключ' |
		| 'Тест обработки запроса'  | '000000001' | 'gita'           |
	И в таблице "List" я выбираю текущую строку

	Тогда открылось окно 'Тест обработки запроса (Обработчики событий)'
	И в таблице "ReceivedRequests" я нажимаю на кнопку с именем 'ReceivedRequestsResendData'
	Тогда появилось предупреждение, содержащее текст "Запущена повторная обработка запроса"
	И я закрываю окно предупреждения
	
	Проверка получения файла получателями

		И Пауза 5
		Тогда Я проверяю запрос для '{""httpRequest"": {""path"": ""/endpoint1""}, ""times"": { ""atLeast"": 2, ""atMost"": 2 }}'
		И Я проверяю запрос для '{""httpRequest"": {""path"": ""/endpoint3""}, ""times"": { ""atLeast"": 2, ""atMost"": 2 }}'

Сценарий: Я проверяю что повторно отправленный запрос (вручную) был обработан c изменением маршрутизации

	Пусть Я создаю Expectation с телом запроса "/home/usr1cv8/test/expectation-endpoints.json"
	И Я добавляю новый обработчик событий "Тест обработки запроса" с ключом "gita"
	И Я отправляю "Push Hook" запрос с ключом "gita" и телом "/home/usr1cv8/test/request-epf-push.json" для "/api/ru/hs/gitlab/webhooks/epf/push"
	И Пауза 5

	Тогда в таблице "List" я перехожу к строке:
		| 'Наименование'            | 'Код'       | 'Секретный ключ' |
		| 'Тест обработки запроса'  | '000000001' | 'gita'           |
	И в таблице "List" я выбираю текущую строку

	И в таблице "ReceivedRequests" я нажимаю на кнопку с именем 'ReceivedRequestsOpenRoutingJSON'
	Тогда открылось окно 'Настройка маршрутизации'
	И в таблице "Commits" я перехожу к строке:
		| 'commit_sha'                               |
		| '1b9949a21e6c897b3dcb4dd510ddb5f893adae2f' |
	И я изменяю флаг 'Пользовательский вариант'
	
	Исключаем "spb" в маршрутах для "Каталог с отчетами и обработками/Внешняя Обработка 1.epf"

		И в поле 'CommitsRoutingJSON' я ввожу текст '{\"ws\":[{\"name\":\"spb\",\"url\":\"http://mockserver:1080/endpoint1\",\"enabled\":true},{\"name\":\"msk\",\"url\":\"http://mockserver:1080/endpoint2\",\"enabled\":false},{\"name\":\"szfo\",\"url\":\"http://mockserver:1080/endpoint3\",\"enabled\":true}],\"epf\":[{\"name\":\"Каталог 1/test1.epf\",\"exclude\":[\"spb\",\"msk\"]},{\"name\":\"Каталог 2/test2.epf\"},{\"name\":\"Каталог с отчетами и обработками/Внешняя Обработка 1.epf\",\"exclude\":[\"spb\"]},{\"name\":\"Нет такого файла.epf\"}]}'
		И я нажимаю на кнопку 'Сохранить JSON'
		И Я закрываю окно 'Настройка маршрутизации'

		Тогда открылось окно 'Тест обработки запроса (Обработчики событий)'
		И в таблице "ReceivedRequests" я нажимаю на кнопку с именем 'ReceivedRequestsResendData'
		Тогда появилось предупреждение, содержащее текст "Запущена повторная обработка запроса"
		И я закрываю окно предупреждения

	Проверка получения файла получателями

		И Пауза 5
		Тогда Я проверяю запрос для '{""httpRequest"": {""path"": ""/endpoint1""}, ""times"": { ""atLeast"": 1, ""atMost"": 1 }}'
		И Я проверяю запрос для '{""httpRequest"": {""path"": ""/endpoint3""}, ""times"": { ""atLeast"": 2, ""atMost"": 2 }}'
