// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере( Отказ, СтандартнаяОбработка )
	
	ИнициализироватьРеквизиты();
	
	УстановитьОформлениеУспешнойОперации();
	УстановитьОформлениеОшибочнойОперации();
	УстановитьОформлениеЗагрузкаФайловВключена();
	УстановитьОформлениеЗагрузкаФайловОтключена();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Проверить( Команда )
	
	Если ( НЕ ПроверитьЗаполнение() ) Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ПараметрыСоединения = ПолучитьПараметрыСоединения( ЭтотОбъект );
	
	РезультатПроверки = ПолучателиВызовСервера.ПолучитьСтатус( ПараметрыСоединения ) ;
	
	УстановитьРезультатПроверки( ЭтотОбъект, РезультатПроверки );
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьРеквизиты()
	
	Реквизиты = ОбщегоНазначенияКлиентСервер.КлючиСтруктурыВСтроку( ПолучателиКлиентСервер.ПараметрыСоединения() );
	
	ЗаполнитьЗначенияСвойств( ЭтотОбъект, Параметры, Реквизиты );
	
	Схема = "http://";
	
	КодСостоянияОК = КодыСостоянияHTTPКлиентСерверПовтИсп.НайтиКодПоИдентификатору( "OK" );
	
	ЗагрузкаФайловВключена = Получатели.ПредставленияСтатуса().ЗагрузкаФайловВключена;
	
	ЗагрузкаФайловОтключена =  Получатели.ПредставленияСтатуса().ЗагрузкаФайловОтключена;
	
КонецПроцедуры

#Область УсловноеОформление

&НаСервере
Процедура УстановитьОформлениеУспешнойОперации()
	
	ЭлементКомпоновки = УсловноеОформление.Элементы.Добавить();
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки( ЭлементКомпоновки.Отбор,
		"КодСостояния", ВидСравненияКомпоновкиДанных.Равно, КодСостояния );
	
	ЭлементКомпоновки.Оформление.УстановитьЗначениеПараметра( "ЦветТекста",
		Метаданные.ЭлементыСтиля.ЦветТекстаУспешнойОперации.Значение );
	
	ОформляемоеПоле = ЭлементКомпоновки.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных( "КодСостояния" );
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеОшибочнойОперации()
	
	ЭлементКомпоновки = УсловноеОформление.Элементы.Добавить();
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки( ЭлементКомпоновки.Отбор,
		"КодСостояния", ВидСравненияКомпоновкиДанных.Больше, КодСостоянияОК );
	
	ЭлементКомпоновки.Оформление.УстановитьЗначениеПараметра( "ЦветТекста",
		Метаданные.ЭлементыСтиля.ЦветТекстаОшибочнойОперации.Значение );
		
	ОформляемоеПоле = ЭлементКомпоновки.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных( "КодСостояния" );

КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеЗагрузкаФайловВключена()
	
	ЭлементКомпоновки = УсловноеОформление.Элементы.Добавить();
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки( ЭлементКомпоновки.Отбор,
		"СостояниеСервиса",
		ВидСравненияКомпоновкиДанных.Равно,
		ПредставлениеСостоянияСервиса(ЗагрузкаФайловВключена) );
	
	ЭлементКомпоновки.Оформление.УстановитьЗначениеПараметра( "ЦветТекста",
		Метаданные.ЭлементыСтиля.ЦветТекстаУспешнойОперации.Значение );
	
	ОформляемоеПоле = ЭлементКомпоновки.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных( "СостояниеСервиса" );
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеЗагрузкаФайловОтключена()
	
	ЭлементКомпоновки = УсловноеОформление.Элементы.Добавить();
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки( ЭлементКомпоновки.Отбор,
		"СостояниеСервиса",
		ВидСравненияКомпоновкиДанных.Равно,
		ПредставлениеСостоянияСервиса(ЗагрузкаФайловОтключена) );
	
	ЭлементКомпоновки.Оформление.УстановитьЗначениеПараметра( "ЦветТекста",
		Метаданные.ЭлементыСтиля.ЦветТекстаОшибочнойОперации.Значение );
	
	ОформляемоеПоле = ЭлементКомпоновки.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных( "СостояниеСервиса" );
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Функция ПолучитьПараметрыСоединения( Знач Форма )
	
	Результат = ПолучателиКлиентСервер.ПараметрыСоединения();
	
	ЗаполнитьЗначенияСвойств( Результат, Форма );
	
	Результат.Адрес = ПолучитьАдрес( Форма );
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьАдрес( Знач Форма )
	
	Возврат Форма.Схема + Форма.Адрес;

КонецФункции

&НаКлиенте
Процедура УстановитьРезультатПроверки( Знач РеквизитыФормы, Знач РезультатПроверки )
	
	ЗаполнитьЗначенияСвойств( РеквизитыФормы, РезультатПроверки );
	
	УстановитьСостояниеСервиса( РеквизитыФормы, РезультатПроверки );
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояниеСервиса( Знач Форма, Знач РезультатПроверки )
	
	Форма.СостояниеСервиса = ПолучитьПредставлениеСостоянияСервиса( РезультатПроверки.ТелоОтвета );
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеСостоянияСервиса( Знач Значение )
	
	Возврат СтрШаблон("<%1>", Значение );
	
КонецФункции

&НаКлиенте
Функция ПолучитьПредставлениеСостоянияСервиса( Знач РезультатПроверки )
	
	Если ( СтрНайти(РезультатПроверки, ЗагрузкаФайловВключена) > 0 ) Тогда
		
		Возврат ПредставлениеСостоянияСервиса( ЗагрузкаФайловВключена );
		
	ИначеЕсли ( СтрНайти(РезультатПроверки, ЗагрузкаФайловОтключена) > 0 ) Тогда
		
		Возврат ПредставлениеСостоянияСервиса( ЗагрузкаФайловОтключена );
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
