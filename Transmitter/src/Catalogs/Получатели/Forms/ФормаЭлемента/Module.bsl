// @strict-types

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПодсказкиПолей( Объект, "ПутьКСтатусуСервиса, ПутьКЗагрузкеФайла" );
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресИнформационнойБазыПриИзменении( Элемент )

	ОбновитьПодсказкиПолей( Объект, "ПутьКСтатусуСервиса, ПутьКЗагрузкеФайла" );
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКСервисамПриИзменении( Элемент )

	ОбновитьПодсказкиПолей( Объект, "ПутьКСтатусуСервиса, ПутьКЗагрузкеФайла" );

КонецПроцедуры

&НаКлиенте
Процедура ПутьКСтатусуСервисаПриИзменении( Элемент )

	ОбновитьПодсказкиПолей( Объект, "ПутьКСтатусуСервиса" );
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКЗагрузкеФайлаПриИзменении( Элемент )

	ОбновитьПодсказкиПолей( Объект, "ПутьКЗагрузкеФайла" );
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьСервис( Команда )
	
	ПараметрыОткрытия = ПолучателиКлиентСервер.ПараметрыСоединения();
	
	ЗаполнитьЗначенияСвойств( ПараметрыОткрытия, Объект );
	
	ПараметрыОткрытия.Адрес = ПолучитьПутьКСервису( Объект,
		Элементы.ПутьКСтатусуСервисаРасширеннаяПодсказка.Родитель.Имя );
	
	ОткрытьФорму( "ОбщаяФорма.ПроверкаВнешнегоСервиса",
		ПараметрыОткрытия, , , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца );
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ОбновитьПодсказкиПолей( Знач Объект, Знач Поля )
	
	СписокПолей	= СтрРазделить( Поля, ",", Ложь );
	
	Для каждого Поле Из СписокПолей Цикл
		
		Подсказка = СокрЛ( Поле ) + "РасширеннаяПодсказка";
		
		Элементы[ Подсказка ].Заголовок = ПолучитьПутьКСервису( Объект, Элементы[Подсказка].Родитель.Имя );
		
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПутьКСервису( Знач Данные, Знач ИмяПоля )
	
	Возврат ПолучателиКлиентСервер.ПолучитьПолныйПутьКСервису( Данные, ИмяПоля );
	
КонецФункции

#КонецОбласти
