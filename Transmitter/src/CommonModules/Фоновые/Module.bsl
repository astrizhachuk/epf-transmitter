// @strict-types

#Область ПрограммныйИнтерфейс

// ПолучитьФоновыеЗаданияПоИдентификатору возвращает список фоновых заданий по набору отборов.
//
// Параметры:
//  Отборы - см. ОбработкаДанных.ПолучитьОтборыФоновыхЗаданий
// 
// Возвращаемое значение:
//  Массив из ФоновоеЗадание - найденные фоновые задания.
//
Функция ПолучитьФоновыеЗаданияПоИдентификатору( Знач Отборы ) Экспорт
	
	Результат = Новый Массив();

	УстановитьПривилегированныйРежим( Истина ); // BSLLS:SetPrivilegedMode-off
	
	Для каждого Отбор Из Отборы Цикл
		
		Если ПустаяСтрока(Отбор.Префикс) Тогда

			ОбщегоНазначенияКлиентСервер.ДополнитьМассив( Результат,
				ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор) );
			
		Иначе

			ОтборДляПоиска = Новый Структура( "ИмяМетода", Отбор.ИмяМетода );
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив( Результат,
				ОтобратьПоПрефиксуКлюча(ОтборДляПоиска, Отбор.Префикс) );
				
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// ПолучитьПредставлениеЗадания получает текущее представление фонового задания по его уникальному идентификатору.
// 
// Параметры:
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор фонового задания.
// 
// Возвращаемое значение:
//  - Неопределено - если задание по уникальному идентификатору не было найдено.
//  - см. ПредставлениеЗадания
//
Функция ПолучитьПредставлениеЗадания( Знач УникальныйИдентификатор ) Экспорт

	Задание = НайтиЗадание( УникальныйИдентификатор );

	Если ( Задание = Неопределено ) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат ПолучитьПредставление( Задание );

КонецФункции

// ОтменитьЗадание отменяет фоновое задание по его уникальному идентификатору.
//
// Параметры:
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор задания для отмены.
//
// Возвращаемое значение:
//  - Неопределено - если задание не найдено.
//  - см. ПредставлениеЗадания
//
Функция ОтменитьЗадание( Знач УникальныйИдентификатор ) Экспорт
	
	Задание = НайтиЗадание( УникальныйИдентификатор );

	Если ( Задание = Неопределено ) Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ВыполнитьОтмену( Задание );
	
	Возврат ПолучитьПредставление( Задание );

КонецФункции

// ЗаполнитьСписокЗаданий преобразует массив объектов фоновых заданий в таблицу значений с их представлениями.
// 
// Параметры:
//  Список - ТаблицаЗначений - данные: см. Справочник.ОбработчикиВнешнихЗапросов.Форма.ФоновыеЗадания.ФоновыеЗадания
//  Задания - см. ПолучитьФоновыеЗаданияПоИдентификатору
//
Процедура ЗаполнитьСписокЗаданий( Список, Знач Задания ) Экспорт

	Для Каждого Задание Из Задания Цикл
		
		ЗаполнитьЗначенияСвойств( Список.Добавить(), ПолучитьПредставление(Задание) );
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ОтобратьПоПрефиксуКлюча получает массив объектов ФоновоеЗадание по заданному отбору в привилегированном режиме
// с дополнительным отбором по префиксу ключа фонового задания.
// 
// Параметры:
// 	Отбор - Структура - параметр Отбор глобального метода ФоновыеЗадания.ПолучитьФоновыеЗадания.
// 	Префикс - Строка - дополнительный отбор по префиксу ключа фонового задания.
// 	
// Возвращаемое значение:
// 	Массив из ФоновоеЗадание - отобранные фоновые задания;
//
Функция ОтобратьПоПрефиксуКлюча( Знач Отбор, Знач Префикс )
	
	Результат = Новый Массив(); // Массив из ФоновоеЗадание
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания( Отбор );
	
	Для Каждого Задание Из Задания Цикл
		
		Если ( НЕ СтрНачинаетсяС(Задание.Key, Префикс) ) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Результат.Добавить( Задание );
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// ПредставлениеЗадания создает и возвращает описание представления фонового задания.
// 
// Возвращаемое значение:
//  Структура - описание задания:
// * УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор фонового задания.
// * Ключ - Строка - ключ фонового задания.
// * ИмяМетода - Строка - имя метода фонового задания.
// * Начало - Дата - дата и время начала выполнения фонового задания.
// * Конец - Дата - дата и время окончания выполнения фонового задания.
// * Состояние - Строка - представление состояния фонового задания.
// * ПредставлениеОшибки - Строка - подробное представление ошибки выполнения фонового задания.
//
Функция ПредставлениеЗадания()
	
	ПустойИдентификатор = Новый УникальныйИдентификатор( "00000000-0000-0000-0000-000000000000" );

	Результат = Новый Структура();
	Результат.Вставить( "УникальныйИдентификатор", ПустойИдентификатор );
	Результат.Вставить( "Ключ", "" );
	Результат.Вставить( "ИмяМетода", "" );
	Результат.Вставить( "Начало", Дата(1, 1, 1) );
	Результат.Вставить( "Конец", Дата(1, 1, 1) );
	Результат.Вставить( "Состояние", "" );
	Результат.Вставить( "ПредставлениеОшибки", "" );
	
	Возврат Результат;
	
КонецФункции

// ПолучитьПредставление возвращает заполненное представление фонового задания.
// 
// Параметры:
//  Задание - ФоновоеЗадание - фоновое задание, представление которого надо получить.
// 
// Возвращаемое значение:
//  см. ПредставлениеЗадания
//
Функция ПолучитьПредставление( Знач Задание )
	
	Результат = ПредставлениеЗадания();
	
	ЗаполнитьЗначенияСвойств( Результат, Задание );
	
	Результат.Состояние = Строка( Задание.Состояние );
	
	Если ( Задание.ИнформацияОбОшибке <> Неопределено ) Тогда
		
		Результат.ПредставлениеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки( Задание.ИнформацияОбОшибке );
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// НайтиЗадание возвращает результат поиска фонового задания по уникальному идентификатору.
//
// Параметры:
//   УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор фонового задания.
//
// Возвращаемое значение:
//   - Неопределено - если задание не найдено.
//   - ФоновоеЗадание - найденное фоновое задание.
//
Функция НайтиЗадание( Знач УникальныйИдентификатор )
	
	УстановитьПривилегированныйРежим( Истина );
	
	Возврат ФоновыеЗадания.НайтиПоУникальномуИдентификатору( УникальныйИдентификатор );
	
КонецФункции

// ВыполнитьОтмену выполняет отмену фонового задания по уникальному идентификатору.
//
// Параметры:
//  Задание - ФоновоеЗадание - фоновое задание, которое нужно отменить.
//
Процедура ВыполнитьОтмену( Задание )
	
	Если ( Задание.Состояние <> СостояниеФоновогоЗадания.Активно ) Тогда
		
		Возврат;
		
	КонецЕсли;

	УстановитьПривилегированныйРежим( Истина );
	
	Задание.Отменить();
	
	Задание = Задание.ОжидатьЗавершенияВыполнения();

КонецПроцедуры

#КонецОбласти
