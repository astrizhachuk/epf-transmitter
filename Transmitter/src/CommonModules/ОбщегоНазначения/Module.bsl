#Область ПрограммныйИнтерфейс

#Область ОповещениеПользователя

// АПК:142-выкл 4 необязательных параметра для совместимости 
// с устаревшей процедурой ОбщегоНазначенияКлиентСервер.СообщитьПользователю.

// Формирует и выводит сообщение, которое может быть связано с элементом управления формы.
//
// Параметры:
//  ТекстСообщенияПользователю - Строка - текст сообщения.
//  КлючДанных - ЛюбаяСсылка - объект или ключ записи информационной базы, к которому это сообщение относится.
//  Поле - Строка - наименование реквизита формы.
//  ПутьКДанным - Строка - путь к данным (путь к реквизиту формы).
//  Отказ - Булево - выходной параметр, всегда устанавливается в значение Истина.
//
// Пример:
//
//  1. Для вывода сообщения у поля управляемой формы, связанного с реквизитом объекта:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "ПолеВРеквизитеФормыОбъект",
//   "Объект");
//
//  Альтернативный вариант использования в форме объекта:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "Объект.ПолеВРеквизитеФормыОбъект");
//
//  2. Для вывода сообщения рядом с полем управляемой формы, связанным с реквизитом формы:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ,
//   "ИмяРеквизитаФормы");
//
//  3. Для вывода сообщения связанного с объектом информационной базы:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), ОбъектИнформационнойБазы, "Ответственный",,Отказ);
//
//  4. Для вывода сообщения по ссылке на объект информационной базы:
//  ОбщегоНазначенияКлиент.СообщитьПользователю(
//   НСтр("ru = 'Сообщение об ошибке.'"), Ссылка, , , Отказ);
//
//  Случаи некорректного использования:
//   1. Передача одновременно параметров КлючДанных и ПутьКДанным.
//   2. Передача в параметре КлючДанных значения типа отличного от допустимого.
//   3. Установка ссылки без установки поля (и/или пути к данным).
//
//@skip-check method-too-many-params
Процедура СообщитьПользователю( 
	Знач ТекстСообщенияПользователю,
	Знач КлючДанных = Неопределено,
	Знач Поле = "",
	Знач ПутьКДанным = "",
	Отказ = Ложь) Экспорт
	
	ЭтоОбъект = Ложь;
	
	Если КлючДанных <> Неопределено
		И XMLТипЗнч(КлючДанных) <> Неопределено Тогда
		
		ТипЗначенияСтрокой = XMLТипЗнч(КлючДанных).ИмяТипа;
		ЭтоОбъект = СтрНайти(ТипЗначенияСтрокой, "Object.") > 0;
	КонецЕсли;
	
	ОбщегоНазначенияСлужебныйКлиентСервер.СообщитьПользователю(
		ТекстСообщенияПользователю,
		КлючДанных,
		Поле,
		ПутьКДанным,
		Отказ,
		ЭтоОбъект);
	
КонецПроцедуры

#КонецОбласти

// ПроверитьУникальностьПоРеквизитуПередЗаписью выполняет проверку наличия дублирующихся записей в базе данных
// по значению переданного реквизита. Если дубликат найден, пользователю выводится сообщение,
// а параметр Отказ устанавливается в Истина.
//
// Параметры:
//  Объект - СправочникОбъект - объект, для которого выполняется проверка;
//  Реквизит - ОписаниеСтандартногоРеквизита, ОбъектМетаданных - реквизит, значение которого
//																проверяется на уникальность;
//  Значение - Произвольный - проверяемое значение реквизита;
//  Отказ - Булево - флаг отмены записи. Если найдены дубликаты, устанавливается в Истина.
//
Процедура ПроверитьУникальностьПоРеквизитуПередЗаписью( Знач Объект, Знач Реквизит, Знач Значение, Отказ ) Экспорт
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	Запрос = Новый Запрос( ТекстЗапросаПоискаДубликатаЗаписи(МетаданныеОбъекта.ПолноеИмя(), Реквизит.Имя) );
	Запрос.УстановитьПараметр( МетаданныеОбъекта.СтандартныеРеквизиты.Ссылка.Имя, Объект.Ссылка );
	Запрос.УстановитьПараметр( Реквизит.Имя, Значение );
	
	Если ( НЕ Запрос.Выполнить().Пустой() ) Тогда
		
		СообщитьПользователю(
			ТекстСообщенияПриДублировании(Реквизит.Представление(), Значение),
			Объект, Реквизит.Имя, , Отказ );
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УсловиеПоискаПоРеквизиту( Знач ИмяРеквизита )
	
	Возврат СтрШаблон( "ПсевдонимТаблицы.%1 = &%1", ИмяРеквизита );
	
КонецФункции

Функция ТекстСообщенияПриДублировании( Знач ПредставлениеРеквизита, Знач Значение )
	
	Результат = НСтр(
		"ru = 'Значение ""%2"" поля ""%1"" не уникально';en = 'The value ""%2"" of the field ""%1"" is not unique'");
	
	Возврат СтрШаблон( Результат, ПредставлениеРеквизита, Значение );
	
КонецФункции

Функция ТекстЗапросаПоискаДубликатаЗаписи( Знач ПолноеИмяОбъекта, Знач ИмяРеквизита )
	
	Результат = "ВЫБРАТЬ ПЕРВЫЕ 1
	            |	ИСТИНА КАК Поле1
	            |ИЗ
	            |	&Таблица КАК ПсевдонимТаблицы
	            |ГДЕ
	            |	&Условие
	            |	И ПсевдонимТаблицы.Ссылка <> &Ссылка
	            |	И НЕ ПсевдонимТаблицы.ПометкаУдаления";
	
	Результат = СтрЗаменить( Результат, "&Таблица", ПолноеИмяОбъекта );
	Результат = СтрЗаменить( Результат, "&Условие", УсловиеПоискаПоРеквизиту(ИмяРеквизита) );
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
