
&Вместо("ПолучитьИсториюСобытий")
Функция Мок_ПолучитьИсториюСобытий(Знач События, Знач Отбор) Экспорт

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(События, Отбор);
	
	ПрерватьВыполнение = Ложь;
	Результат = ОМ_Тесты.Мокито().АнализВызова(Логи, "ПолучитьИсториюСобытий", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		Возврат ПродолжитьВызов(События, Отбор);
	Иначе
		Возврат Результат;
	КонецЕсли;

КонецФункции

&Вместо("Ошибка")
Функция Мок_Ошибка(Знач Событие, Знач Сообщение, Знач Параметры) Экспорт

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(Событие, Сообщение, Параметры);
	
	ПрерватьВыполнение = Ложь;
	Результат = ОМ_Тесты.Мокито().АнализВызова(Логи, "Ошибка", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		Возврат ПродолжитьВызов(Событие, Сообщение, Параметры);
	Иначе
		Возврат Результат;
	КонецЕсли;

КонецФункции

&Вместо("ЗаписатьВЖурналРегистрации")
Процедура Мок_ЗаписатьВЖурналРегистрации(Знач Событие, Знач Уровень, Знач МетаданныеОбъекта, Знач Данные, Знач Комментарий)

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(Событие, Уровень, МетаданныеОбъекта, Данные, Комментарий);
	
	ПрерватьВыполнение = Ложь;
	ОМ_Тесты.Мокито().АнализВызова(Логи, "ЗаписатьВЖурналРегистрации", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		ПродолжитьВызов(Событие, Уровень, МетаданныеОбъекта, Данные, Комментарий);
	КонецЕсли;

КонецПроцедуры

&Вместо("ПолучитьДанныеЖурналаРегистрации")
Функция Мок_ПолучитьДанныеЖурналаРегистрации(Знач Отбор)

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(Отбор);
	
	ПрерватьВыполнение = Ложь;
	Результат = ОМ_Тесты.Мокито().АнализВызова(Логи, "ПолучитьДанныеЖурналаРегистрации", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		Возврат ПродолжитьВызов(Отбор);
	Иначе
		Возврат Результат;
	КонецЕсли;

КонецФункции
