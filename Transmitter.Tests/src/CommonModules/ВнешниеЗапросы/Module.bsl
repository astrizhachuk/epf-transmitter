
&Вместо("Восстановить")
Функция Мок_Восстановить(Знач Обработчик, Знач Идентификатор) Экспорт

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(Обработчик, Идентификатор);
	
	ПрерватьВыполнение = Ложь;
	Результат = ОМ_Тесты.Мокито().АнализВызова(ВнешниеЗапросы, "Восстановить", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		Возврат ПродолжитьВызов(Обработчик, Идентификатор);
	Иначе
		Возврат Результат;
	КонецЕсли;

КонецФункции

&Вместо("Сохранить")
Процедура Мок_Сохранить(Знач Обработчик, Знач Идентификатор, Знач ВнешнийЗапрос) Экспорт

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(Обработчик, Идентификатор, ВнешнийЗапрос);
	
	ПрерватьВыполнение = Ложь;
	ОМ_Тесты.Мокито().АнализВызова(ВнешниеЗапросы, "Сохранить", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		ПродолжитьВызов(Обработчик, Идентификатор, ВнешнийЗапрос);
	КонецЕсли;

КонецПроцедуры

&Вместо("Создать")
Функция Мок_Создать(Знач Источник) Экспорт

	ПараметрыМетода = ОМ_Тесты.Мокито().МассивПараметров(Источник);
	
	ПрерватьВыполнение = Ложь;
	Результат = ОМ_Тесты.Мокито().АнализВызова(ВнешниеЗапросы, "Создать", ПараметрыМетода, ПрерватьВыполнение);
	
	Если НЕ ПрерватьВыполнение Тогда
		Возврат ПродолжитьВызов(Источник);
	Иначе
		Возврат Результат;
	КонецЕсли;

КонецФункции
