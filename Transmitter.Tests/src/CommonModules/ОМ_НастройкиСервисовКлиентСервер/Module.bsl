#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	//@skip-check undefined-variable
	ЮТТесты
		.ДобавитьТест("НастройкиСервисаОбработкиЗапросаГитлаб")
		.ДобавитьТест("НастройкиПараметровСоединенияКПолучателямПоУмолчанию")
	;
	
КонецПроцедуры

Процедура НастройкиСервисаОбработкиЗапросаГитлаб() Экспорт
	
	// given
	Ожидание = Новый Структура();
	Ожидание.Вставить("ОбрабатыватьГитлабЗапрос", Ложь);
	Ожидание.Вставить("ИмяФайлаСхемыМаршрута", "");
	Ожидание.Вставить("ТокенГитлаб", "");
	Ожидание.Вставить("ТаймаутГитлаб", 5);
	
	// when
	Результат = НастройкиСервисовКлиентСервер.НастройкиСервисаОбработкиЗапросаГитлаб();
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Структура")
		.ИмеетДлину(Ожидание.Количество())
		.ИмеетСвойстваРавные(Ожидание);
	
КонецПроцедуры

Процедура НастройкиПараметровСоединенияКПолучателямПоУмолчанию() Экспорт
	
	// given
	Ожидание = Новый Структура();
	Ожидание.Вставить("ПользовательВнешнегоСервиса", "");
	Ожидание.Вставить("ПарольВнешнегоСервиса", "");
	Ожидание.Вставить("ТаймаутВнешнегоСервиса", 5);
	
	// when
	Результат = НастройкиСервисовКлиентСервер.НастройкиПараметровСоединенияКПолучателямПоУмолчанию();
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Структура")
		.ИмеетДлину(Ожидание.Количество())
		.ИмеетСвойстваРавные(Ожидание);
	
КонецПроцедуры

#КонецОбласти
