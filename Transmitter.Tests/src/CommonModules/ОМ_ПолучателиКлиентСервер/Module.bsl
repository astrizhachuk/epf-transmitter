#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	//@skip-check undefined-variable
	ЮТТесты
		.ДобавитьТест("ПараметрыСоединения")
		.ДобавитьТест("ПолучитьПолныйПутьКСервисуСтатус")
		.ДобавитьТест("ПолучитьПолныйПутьКСервисуЗагрузкаФайла")
	;
	
КонецПроцедуры

Процедура ПараметрыСоединения() Экспорт
	
	// given
	Ожидание = Заглушка();
	
	// when
	Результат = ПолучателиКлиентСервер.ПараметрыСоединения();
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Структура")
		.ИмеетДлину(Ожидание.Количество())
		.ИмеетСвойстваРавные(Ожидание);
	
КонецПроцедуры

Процедура ПолучитьПолныйПутьКСервисуСтатус() Экспорт

	// given
	Данные = Новый Структура;
	Данные.Вставить("АдресИнформационнойБазы", "http://example.com");
	Данные.Вставить("ПутьКСервисам", "/api");
	Данные.Вставить("ПутьКСтатусуСервиса", "/status");
	Данные.Вставить("ПутьКЗагрузкеФайла", "");

	ОжидаемыйПуть = "http://example.com/api/status";
	
	// when
	Результат = ПолучателиКлиентСервер.ПолучитьПолныйПутьКСервису(Данные, "ПутьКСтатусуСервиса");
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.Равно(ОжидаемыйПуть);
	
КонецПроцедуры

Процедура ПолучитьПолныйПутьКСервисуЗагрузкаФайла() Экспорт

	// given
	Данные = Новый Структура;
	Данные.Вставить("АдресИнформационнойБазы", "http://example.com");
	Данные.Вставить("ПутьКСервисам", "/api");
	Данные.Вставить("ПутьКСтатусуСервиса", "");
	Данные.Вставить("ПутьКЗагрузкеФайла", "/uploadFile");

	ОжидаемыйПуть = "http://example.com/api/uploadFile";
	
	// when
	Результат = ПолучателиКлиентСервер.ПолучитьПолныйПутьКСервису(Данные, "ПутьКЗагрузкеФайла");
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.Равно(ОжидаемыйПуть);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Заглушка()
	
	Результат = Новый Структура();
	Результат.Вставить("Адрес", "");
	Результат.Вставить("Пользователь", "");
	Результат.Вставить("Пароль", "");
	Результат.Вставить("Таймаут", 5);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

//// Проверяет корректность формирования полного пути для статуса сервиса
//Процедура Тест_ПолучитьПолныйПутьКСервису_СтатусСервиса() Экспорт
//	Данные = Новый Структура;
//	Данные.Вставить("АдресИнформационнойБазы", "http://example.com/");
//	Данные.Вставить("ПутьКСервисам", "api/");
//	Данные.Вставить("ПутьКСтатусуСервиса", "status");
//	Данные.Вставить("ПутьКЗагрузкеФайла", "upload");
//
//	ОжидаемыйПуть = "http://example.com/api/status";
//	Результат = ПолучитьПолныйПутьКСервису(Данные, "ПутьКСтатусуСервиса");
//	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат).Равно(ОжидаемыйПуть);
//КонецПроцедуры
//
//// Проверяет корректность формирования полного пути для загрузки файла
//Процедура Тест_ПолучитьПолныйПутьКСервису_ЗагрузкаФайла() Экспорт
//	Данные = Новый Структура;
//	Данные.Вставить("АдресИнформационнойБазы", "http://example.com/");
//	Данные.Вставить("ПутьКСервисам", "api/");
//	Данные.Вставить("ПутьКСтатусуСервиса", "status");
//	Данные.Вставить("ПутьКЗагрузкеФайла", "upload");
//
//	ОжидаемыйПуть = "http://example.com/api/upload";
//	Результат = ПолучитьПолныйПутьКСервису(Данные, "ПутьКЗагрузкеФайла");
//	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат).Равно(ОжидаемыйПуть);
//КонецПроцедуры
//
//// Проверяет поведение при пустых полях структуры
//Процедура Тест_ПолучитьПолныйПутьКСервису_ПустыеПоля() Экспорт
//	Данные = Новый Структура;
//	Данные.Вставить("АдресИнформационнойБазы", "");
//	Данные.Вставить("ПутьКСервисам", "");
//	Данные.Вставить("ПутьКСтатусуСервиса", "");
//	Данные.Вставить("ПутьКЗагрузкеФайла", "");
//
//	ОжидаемыйПуть = "";
//	Результат = ПолучитьПолныйПутьКСервису(Данные, "ПутьКСтатусуСервиса");
//	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат).Равно(ОжидаемыйПуть);
//КонецПроцедуры