#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	//@skip-check undefined-variable
	ЮТТесты
		.ДобавитьТест("НайтиПоАдресуПубликации")
			.ВТранзакции()
		.ДобавитьТест("НайтиПоАдресуПубликацииПриПомеченномНаУдалениеОбъектеВозвращаетПустоеЗначение")
			.ВТранзакции()
		.ДобавитьТест("НайтиПоАдресуПубликацииПриНеверномТипеПараметраВозвращаетПустоеЗначение")
			.СПараметрами(1)
			.СПараметрами(Неопределено)
		.ДобавитьТест("НайтиПоАдресуПубликацииПриПустомПараметреВозвращаетПустоеЗначение")
			.ВТранзакции()
		.ДобавитьТест("ПолучитьСоединениеКСервисуЗагрузкиФайла")
			.ВТранзакции()
	;
	
КонецПроцедуры

Процедура НайтиПоАдресуПубликации() Экспорт
	
	// given
	Адрес = ОМ_Тесты.ЮТест().Данные().СлучайнаяСтрока(); 
	
	Конструктор = ОМ_Тесты.ЮТест().Данные().КонструкторОбъекта(Справочники.Получатели);
	Ожидание = Конструктор
					.ФикцияОбязательныхПолей()
					.Установить("АдресИнформационнойБазы", Адрес)
					.Записать( , Истина);
	
	// when
	Результат = Справочники.Получатели.НайтиПоАдресуПубликации(Адрес);
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Массив")
		.ИмеетДлину(1)
		.Свойство("[0]").Равно(Ожидание.Ссылка);
	
КонецПроцедуры

Процедура НайтиПоАдресуПубликацииПриПомеченномНаУдалениеОбъектеВозвращаетПустоеЗначение() Экспорт
	
	// given
	Адрес = ОМ_Тесты.ЮТест().Данные().СлучайнаяСтрока(); 
	
	Конструктор = ОМ_Тесты.ЮТест().Данные().КонструкторОбъекта(Справочники.Получатели);
	Конструктор
		.ФикцияОбязательныхПолей()
		.Установить("АдресИнформационнойБазы", Адрес)
		.Установить("ПометкаУдаления", Истина)
		.Записать( , Истина);
	
	// when
	Результат = Справочники.Получатели.НайтиПоАдресуПубликации(Адрес);
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Массив")
		.НеЗаполнено()
	
КонецПроцедуры

Процедура НайтиПоАдресуПубликацииПриНеверномТипеПараметраВозвращаетПустоеЗначение(Знач Параметр) Экспорт
	
	// given
	
	// when
	Результат = Справочники.Получатели.НайтиПоАдресуПубликации(Параметр);
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Массив")
		.НеЗаполнено()
	
КонецПроцедуры

Процедура НайтиПоАдресуПубликацииПриПустомПараметреВозвращаетПустоеЗначение() Экспорт
	
	// given
	Конструктор = ОМ_Тесты.ЮТест().Данные().КонструкторОбъекта(Справочники.Получатели);
	Конструктор
		.ФикцияОбязательныхПолей()
		.Записать();
	
	// when
	Результат = Справочники.Получатели.НайтиПоАдресуПубликации("");
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Массив")
		.НеЗаполнено()
	
КонецПроцедуры

Процедура ПолучитьСоединениеКСервисуЗагрузкиФайла() Экспорт
	
	// given
	Конструктор = ОМ_Тесты.ЮТест().Данные().КонструкторОбъекта(Справочники.Получатели);
	Получатель = Конструктор
		.ФикцияОбязательныхПолей()
		.Фикция("Пользователь")
		.Фикция("Пароль")
		.Фикция("Таймаут")
		.Записать( , Истина);
	
	// when
	Результат = Справочники.Получатели.ПолучитьСоединениеКСервисуЗагрузкиФайла(Получатель);
	
	// then
	ОМ_Тесты.ЮТест().ОжидаетЧто(Результат)
		.ИмеетТип("Структура")
		.Свойство("Пользователь").Равно(Получатель.Пользователь)
		.Свойство("Пароль").Равно(Получатель.Пароль)
		.Свойство("Таймаут").Равно(Получатель.Таймаут)
		.Свойство("Адрес").Равно(Получатель.АдресИнформационнойБазы + Получатель.ПутьКСервисам + Получатель.ПутьКЗагрузкеФайла);
	
КонецПроцедуры

#КонецОбласти
