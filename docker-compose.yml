version: '3.8'

services:

  nginx:
    restart: always
    image: nginx:latest
    container_name: nginx
    volumes:
      - nginx_log:/var/log/nginx
      - "./tools/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./tools/nginx/gitlab-http.conf:/etc/nginx/conf.d/gitlab-http.conf:ro"
      - "./tools/nginx/transmitter-http.conf:/etc/nginx/conf.d/transmitter-http.conf:ro"
      - "./tools/nginx/receiver-http.conf:/etc/nginx/conf.d/receiver-http.conf:ro"
      - "./tools/nginx/mock-server-http.conf:/etc/nginx/conf.d/mock-server-http.conf:ro"
    ports:
      - "80:80"
      - "1090:1080" # для доступа к mock-server (не обязательно)
    networks:
      - back_net

  gitlab:
    image: gitlab/gitlab-ee:14.4.0-ee.0
    container_name: gitlab
    hostname: gitlab
    # ports:
    #   - "80:80"
    environment:
      GITLAB_POST_RECONFIGURE_SCRIPT: "chmod +x /restore.sh /backup.sh"
      #usr=root;pwd=administrator
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab'
        gitlab_rails['initial_root_password'] = "administrator"
    volumes:
      - gitlab_conf:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
      - ./test/gitlab:/backups
      - ./tools/gitlab/restore.sh:/restore.sh
      - ./tools/gitlab/backup.sh:/backup.sh
    networks:
      - back_net

  mock-server:
    image: mockserver/mockserver
    container_name: mock-server
    command: -logLevel DEBUG -serverPort 1080
    volumes:
      - ./api/receiver.yml:/tmp/receiver.yml
    networks:
      - back_net

  srv:
    image: ${DOCKER_USERNAME}/server:${ONEC_VERSION}
    build:
      context: https://github.com/astrizhachuk/onec-docker.git
      dockerfile: ./server/Dockerfile
      args:
        - ONEC_USERNAME
        - ONEC_PASSWORD
        - ONEC_VERSION
    hostname: srv
    depends_on:
      - db
    ports:
      - "1540-1541:1540-1541"
      - "1550:1550" # для режима отладки
      - "1560-1591:1560-1591"
    entrypoint: ["/opt/1cv8/current/ragent", "-debug", "-http"] # entrypoint только для отладки, иначе - удалить
    volumes:
      - srv_data:/home/usr1cv8/.1cv8
      - srv_log:/var/log/1C
      - ~/nethasp.ini:/opt/1cv8/current/conf/nethasp.ini
      - ./configs/conf.cfg:/opt/1cv8/current/conf/conf.cfg
      - ./test:/home/usr1cv8/test # чтобы не передавать данные с клиента на сервер в самом тесте
    networks:
      - back_net

  client:
    image: ${DOCKER_USERNAME}/client-vnc:${ONEC_VERSION}
    build:
      context: https://github.com/astrizhachuk/onec-docker.git
      dockerfile: ./client/Dockerfile
      args:
        - ONEC_USERNAME
        - ONEC_PASSWORD
        - ONEC_VERSION
      target: client-vnc
    ports:
      - "5900:5900"
    volumes:
      - client_data:/home/usr1cv8/.1cv8
      - ./tools/ibases.v8i:/home/usr1cv8/.1C/1cestart/ibases.v8i
      - ~/nethasp.ini:/opt/1cv8/current/conf/nethasp.ini
      - ./configs/conf.cfg:/opt/1cv8/current/conf/conf.cfg
      - ./test/empty.dt:/home/usr1cv8/empty.dt
    networks:
      - back_net

  db:
    image: strizhhh/postgresql-pro-1c:9.6
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql
    networks:
      - back_net

  transmitter:
    image: ${DOCKER_USERNAME}/ws:${ONEC_VERSION}
    build:
      context: https://github.com/astrizhachuk/onec-docker.git
      dockerfile: ./ws/Dockerfile
      args:
        - ONEC_USERNAME
        - ONEC_PASSWORD
        - ONEC_VERSION
    depends_on:
      - srv
    command: >
      bash -c "/opt/1cv8/current/webinst -apache24 -wsdir client -dir /var/www/client -descriptor /var/www/client.vrd -connstr 'Srvr=srv;Ref=gitlabServices;'
      && /opt/1cv8/current/webinst -apache24 -wsdir api -dir /var/www/api -descriptor /var/www/api.vrd -connstr 'Srvr=srv;Ref=gitlabServices;usr=site;pwd=12345'
      && /opt/1cv8/current/webinst -apache24 -wsdir api/en -dir /var/www/api/en -descriptor /var/www/api.vrd -connstr 'Srvr=srv;Ref=gitlabServices;usr=site;pwd=12345'
      && /opt/1cv8/current/webinst -apache24 -wsdir api/ru -dir /var/www/api/ru -descriptor /var/www/api.vrd -connstr 'Srvr=srv;Ref=gitlabServices;usr=сайт;pwd=12345'
      && chown -R usr1cv8:grp1cv8 /var/www/client /var/www/api
      && /usr/sbin/apache2ctl -DFOREGROUND"
    volumes:
      - srv_data:/home/usr1cv8/.1cv8
      - srv_log:/var/log/1C
      - ./web/client-debug.vrd:/var/www/client.vrd
      - ./web/api-debug.vrd:/var/www/api.vrd
    networks:
      - back_net
    
  receiver:
    image: ${DOCKER_USERNAME}/receiver:${ONEC_VERSION}
    build:
      context: .
      dockerfile: ./test/receiver/Dockerfile
      args:
        - DOCKER_USERNAME
        - ONEC_VERSION
    command: >
      bash -c "/opt/1cv8/current/webinst -apache24 -wsdir client -dir /var/www/client -descriptor /var/www/client.vrd -connstr 'File=/home/usr1cv8/db'
      && /opt/1cv8/current/webinst -apache24 -wsdir api -dir /var/www/api -descriptor /var/www/api.vrd -connstr 'File=/home/usr1cv8/db;usr=gitlab;pwd=gitlab'
      && chown -R usr1cv8:grp1cv8 /var/www/client /var/www/api /home/usr1cv8/db
      && /usr/sbin/apache2ctl -DFOREGROUND"
    ports:
      - "8081-8082:80"
    volumes:
      - srv_data:/home/usr1cv8/.1cv8
      - srv_log:/var/log/1C
      - ~/nethasp.ini:/opt/1cv8/current/conf/nethasp.ini
      - ./test/receiver/web/client.vrd:/var/www/client.vrd
      - ./test/receiver/web/api.vrd:/var/www/api.vrd
    networks:
      - back_net

volumes:
  srv_data:
  srv_log:
  db_data:
  client_data:
  nginx_log:
  gitlab_conf:
  gitlab_logs:
  gitlab_data:

networks:
  back_net: